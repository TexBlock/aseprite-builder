name: Build

on: workflow_dispatch

jobs:
  build:
    runs-on: windows-latest
    outputs:
      download_url: ${{ steps.version_info.outputs.download_url }}
      latest_tag: ${{ steps.version_info.outputs.latest_tag }}
      should_build: ${{ steps.should_build.outputs.should_build }}
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - name: Get latest version info
      id: version_info
      run: |
        LATEST_TAG=$(echo "${data}" | jq -r '.tag_name')
        DOWNLOAD_URL=$(echo "${data}" | jq -r '.assets[].browser_download_url')
        VERSION_INFO=$(echo "${data}" | jq -r '.body')
        
        echo "${LATEST_TAG}" > ${LATEST_TAG}.txt
        echo "::set-output name=latest_tag::${LATEST_TAG}"
        echo "::set-output name=download_url::${DOWNLOAD_URL}"
        echo "::set-output name=version_info::${VERSION_INFO}"
    - name: Load version from cache
      id: version_check
      uses: actions/cache@v2
      with:
        path: ${{ steps.version_info.outputs.latest_tag }}.txt
        key: cached_version
    - name: Should we start new build?
      id: should_build
      if: steps.version_check.outputs.cache-hit != 'true'
      run: echo "::set-output name=should_build::true"
    - name: Create Release
      id: create_release
      if: steps.should_build.outputs.should_build
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.version_info.outputs.latest_tag }}
        release_name: Release Aseprite ${{ steps.version_info.outputs.latest_tag }}
        body: |
          ${{ steps.version_info.outputs.version_info }}
        draft: true
        prerelease: false
    - name: Install ninja
      uses: seanmiddleditch/gha-setup-ninja@v3
    - name: Download Skia
      run: |
          curl -o Skia-Windows-Release-X64.zip -L https://github.com/aseprite/skia/releases/download/m81-b607b32047/Skia-${{ runner.os }}-Release-x64.zip
          unzip Skia-${{ runner.os }}-Release-X64.zip -d skia
    - name: Download Aseprite Source
      run: |
          curl -o aseprite.zip -L  https://github.com/aseprite/aseprite/releases/download/v1.3-beta10/Aseprite-v1.3-beta10-Source.zip
          unzip aseprite.zip -d aseprite
          mkdir aseprite/build
    - name: Setup Arch
      shell: cmd
      run: call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat" -arch=x64
    - name: Setup VS
      uses: seanmiddleditch/gha-setup-vsdevenv@v4
    - name: Run CMake
      working-directory: aseprite/build
      shell: cmd
      run: cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_IGNORE_PATH='C:/ProgramData/chocolatey/bin/;C:/Strawberry/c/bin/' -DLAF_BACKEND=skia -DSKIA_DIR=../../skia -DSKIA_LIBRARY_DIR=../../skia/out/Release-x64 -DSKIA_LIBRARY=../../skia/out/Release-x64/skia.lib -G Ninja ..
    - name: Run Ninja
      working-directory: aseprite/build
      run: ninja aseprite
    - name: Cleanup
      working-directory: aseprite/build/bin
      shell: cmd
      run: del modp_b64_gen gen.exe gen.exe.manifest modp_b64_gen.exe modp_b64_gen.exe.manifest
    - name: Create zip
      working-directory: aseprite/build/bin
      run: 7z -tzip a Aseprite.zip *
    - name: Upload 
      uses: actions/upload-artifact@v2.3.1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          name: Aseprite.zip
          path: aseprite/build/bin/Aseprite-v1.3b10.zip
          
